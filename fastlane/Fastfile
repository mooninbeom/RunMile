# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do

  desc "Testflight 자동 배포 lane"
  lane :upload_testflight do
  
    app_store_connect_api_key(
      key_id: "#{ENV["APP_STORE_CONNECT_KEY_ID"]}",
      issuer_id: "#{ENV["APP_STORE_CONNECT_ISSUER_ID"]}",
      key_content: "#{ENV["APP_STORE_CONNECT_KEY"]}",
      is_key_content_base64: true
    )
  
    today = Time.now.strftime("%Y%m%d")
    
    current_build_number = "#{latest_testflight_build_number}"

    if current_build_number.length == 9
      current_date = current_build_number[0,8]         # 앞 8자리가 날짜
      current_count = current_build_number[8].to_i      # 마지막 1자리가 숫자
    else
      # 빌드 넘버가 없거나 형식이 다르면 초기화
      current_date = ""
      current_count = 0
    end

    if current_date == today
      next_count = current_count + 1
    else
      next_count = 1
    end

    new_build_number = "#{today}#{next_count}"
    
    increment_build_number(
      xcodeproj: "Run Mile.xcodeproj",
      build_number: new_build_number
    )
    
    discord_notifier(
      webhook_url: "#{ENV["DISCORD_URL"]}",
      title: "[Testflight] Run Mile 배포 준비",
      description: "[Testflight] Build Number: #{new_build_number} 배포를 위해 준비중입니다."
    )
    
    setup_ci
    
    match(type: "appstore")
    
    discord_notifier(
      webhook_url: "#{ENV["DISCORD_URL"]}",
      title: "[Testflight] Run Mile 인증서 완료",
      description: "[Testflight] Build Number: #{new_build_number} 인증서 준비가 완료되었습니다."
    )
    
    build_app(
      scheme: "Run Mile",
      xcodebuild_formatter: "xcpretty"
    )
    
    discord_notifier(
      webhook_url: "#{ENV["DISCORD_URL"]}",
      title: "[Testflight] Run Mile 아카이브 완료",
      description: "[Testflight] Build Number: #{new_build_number} 아카이브가 완료되었습니다."
    )
    
    upload_to_testflight
    
    discord_notifier(
      webhook_url: "#{ENV["DISCORD_URL"]}",
      title: "[Testflight] Run Mile Testflight 배포 완료",
      description: "[Testflight] Build Number: #{new_build_number} 테스트 플라이트 배포가 완료되었습니다."
    )
  end
  
  
  desc "Appstore 자동 배포 lane"
  lane :upload_appstore do
    app_store_connect_api_key(
      key_id: "#{ENV["APP_STORE_CONNECT_KEY_ID"]}",
      issuer_id: "#{ENV["APP_STORE_CONNECT_ISSUER_ID"]}",
      key_content: "#{ENV["APP_STORE_CONNECT_KEY"]}",
      is_key_content_base64: true
    )
    
    today = Time.now.strftime("%Y%m%d")
    
    current_build_number = "#{latest_testflight_build_number}"

    if current_build_number.length == 9
      current_date = current_build_number[0,8]         # 앞 8자리가 날짜
      current_count = current_build_number[8].to_i      # 마지막 1자리가 숫자
    else
      # 빌드 넘버가 없거나 형식이 다르면 초기화
      current_date = ""
      current_count = 0
    end

    if current_date == today
      next_count = current_count + 1
    else
      next_count = 1
    end

    new_build_number = "#{today}#{next_count}"
    
    increment_build_number(
      xcodeproj: "Run Mile.xcodeproj",
      build_number: new_build_number
    )
    
    current_marketing_version = get_version_number
    current_release_note_path = "../ReleaseNote/v#{current_marketing_version}.md"
    current_release_note = "# Whats new"
    
    if File.exists?(current_release_note_path)
      current_release_note = File.read(current_release_note_path)
    end
    
    puts "Version: #{current_marketing_version}"
    puts "Release Notes\n#{current_release_note}"
    
    discord_notifier(
      webhook_url: "#{ENV["DISCORD_URL"]}",
      title: "[Appstore] Run Mile 배포 준비",
      description: "[Appstore] Build Number: #{new_build_number} 배포를 위해 준비중입니다."
    )
    
    setup_ci
    
    match(type: "appstore")
    
    discord_notifier(
      webhook_url: "#{ENV["DISCORD_URL"]}",
      title: "[Appstore] Run Mile 인증서 완료",
      description: "[Appstore] Build Number: #{new_build_number} 인증서 준비가 완료되었습니다."
    )
    
    build_app(
      scheme: "Run Mile",
      xcodebuild_formatter: "xcpretty"
    )
    
    discord_notifier(
      webhook_url: "#{ENV["DISCORD_URL"]}",
      title: "[Appstore] Run Mile 아카이브 완료",
      description: "[Appstore] Build Number: #{new_build_number} 아카이브가 완료되었습니다."
    )
    
    upload_to_app_store(
      languages: ["ko"],
      force: true,
      submit_for_review: true,
      skip_screenshots: true,
      skip_metadata: true,
      automatic_release: true,
      precheck_include_in_app_purchases: false,
      copyright: "© #{Time.now.year} Mooninbeom",
      release_notes: {
        "ko" => current_release_note
      },
      submission_information: {
        add_id_info_uses_idfa: false,
        export_compliance_encryption_updated: false,
        export_compliance_uses_encryption: false,
        content_rights_contains_third_party_content: false
      }
    )
    
    discord_notifier(
      webhook_url: "#{ENV["DISCORD_URL"]}",
      title: "[Appstore] Run Mile Appstore 배포 완료",
      description: "[Appstore] Build Number: #{new_build_number} 앱스토어 배포가 완료되었습니다."
    )
  end

  
  desc "로컬 테스트용 lane"
  lane :local do
    app_store_connect_api_key(
      key_id: "",
      issuer_id: "",
      key_content: ""
    )
    
    today = Time.now.strftime("%Y%m%d")
    
    current_build_number = "#{latest_testflight_build_number}"

    if current_build_number.length == 9
      current_date = current_build_number[0,8]         # 앞 8자리가 날짜
      current_count = current_build_number[8].to_i      # 마지막 1자리가 숫자
    else
      # 빌드 넘버가 없거나 형식이 다르면 초기화
      current_date = ""
      current_count = 0
    end

    if current_date == today
      next_count = current_count + 1
    else
      next_count = 1
    end

    new_build_number = "#{today}#{next_count}"
    
    increment_build_number(
      xcodeproj: "Run Mile.xcodeproj",
      build_number: new_build_number
    )
    
    match(type: "appstore")
    
    build_app(
      scheme: "Run Mile",
      xcodebuild_formatter: "xcpretty"
    )
    
    upload_to_testflight
  end
  
  error do |lane, exception, options|
    discord_notifier(
      webhook_url: "#{ENV["DISCORD_URL"]}",
      title: "Testflight 배포 중 오류가 발생했습니다.",
      description: "에러 메시지\n#{exception}"
    )
  end
end
